import telebot
import os

from telebot.types import Message
from dotenv import load_dotenv, find_dotenv

load_dotenv(find_dotenv())

bot = telebot.TeleBot(os.getenv('API_TOKEN'))

users = {}
sexes = ["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π", "–õ—é–±–æ–π"]
ages = ["–î–æ 17 –ª–µ—Ç", "–û—Ç 18 –¥–æ 24 –ª–µ—Ç", "–û—Ç 25 –¥–æ 29 –ª–µ—Ç", "–û—Ç 30 –¥–æ 34 –ª–µ—Ç", "–û—Ç 35 –ª–µ—Ç", "–õ—é–±–æ–π"]
settings_messages = [
    "–°–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –ø–æ–ª", 
    "–°–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç", 
    "–°–º–µ–Ω–∏—Ç—å –ø–æ–ª —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞", 
    "–°–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞"
    "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
]

def update_user(user_id, **kwargs):
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    :param user_id: —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä 
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param **kwargs: –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ 
    –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    users[user_id].update({key: value for key, value in kwargs.items()})


@bot.message_handler(commands=['next'])
def search_partner(message: Message):
    try:
        user_id = message.from_user.id

        user_gender = users[user_id]['user_gender']
        user_age = users[user_id]['user_age']
        user_like = users[user_id]['like']
        user_dislike = users[user_id]['dislike']
        user_partner_gender = users[user_id]['partner_gender']
        user_partner_age = users[user_id]['partner_age']

        if user_gender is not None and user_age is not None and user_partner_gender is not None and user_partner_age is not None:

            partner_id = None

            users[user_id] = {"user_gender": user_gender, "user_age": user_age, "like": user_like, "dislike": user_dislike,
                              "partner_gender": user_partner_gender, "partner_age": user_partner_age, "partner_id": None, "last_partner_id": None, "is_looking": True}

            bot.send_message(user_id, "–ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop. –í—Å–µ –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è.\n\n–ò—â–µ–º –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞... üîç")
            
            for partner, partner_params in list(users.items()):
                if partner != user_id and partner_params['is_looking'] == True:

                    partner_gender = partner_params['user_gender']
                    partner_age = partner_params['user_age']
                    partner_partner_gender = partner_params['partner_gender']
                    partner_partner_age = partner_params['partner_age']

                    if partner_partner_gender == user_gender and user_partner_gender == partner_gender \
                       and partner_partner_age == user_age and user_partner_age == partner_age:
                        partner_id = partner
                    elif (partner_partner_gender == "–õ—é–±–æ–π" and user_partner_age == "–õ—é–±–æ–π") \
                         or (partner_partner_age == "–õ—é–±–æ–π" and user_partner_age == "–õ—é–±–æ–π"):
                        partner_id = partner

            if partner_id == None:
                return

            partner_gender = users[partner_id]['user_gender']
            partner_age = users[partner_id]['user_age']
            partner_like = users[partner_id]['like']
            partner_dislike = users[partner_id]['dislike']
            partner_partner_gender = users[partner_id]['partner_gender']
            partner_partner_age = users[partner_id]['partner_age']
                    
            users[user_id] = {"user_gender": user_gender, "user_age": user_age, "like": user_like, "dislike": user_dislike,
                              "partner_gender": user_partner_gender, "partner_age": user_partner_age, "partner_id": partner_id, 
                              "last_partner_id": None, "is_looking": False}
            
            users[partner_id] = {"user_gender": partner_gender, "user_age": partner_age, "like": partner_like, "dislike": partner_dislike,
                                 "partner_gender": partner_partner_gender, "partner_age": partner_partner_age, "partner_id": user_id, 
                                 "last_partner_id": None, "is_looking": False}

            bot.send_message(user_id, "–í—ã –Ω–∞—à–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –æ–±—â–∞–π—Ç–µ—Å—å!")
            bot.send_message(partner_id, "–í—ã –Ω–∞—à–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –æ–±—â–∞–π—Ç–µ—Å—å!")
        else:
            bot.send_message(user_id, "‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, \
                                       —Ç–∞–∫ –∫–∞–∫ –º—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ —É –í–∞—Å –≤–∞–∂–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. \
                                       –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.")
    except KeyError:
        bot.send_message(user_id, "‚ö†Ô∏è –í –≤–∞—à–µ–º —Å–ª—É—á–∞–µ –í–∞–º –Ω—É–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π /start.")